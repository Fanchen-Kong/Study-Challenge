// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = true, sel = address, a = enable1, b = enable2, c = enable3, d = enable4, e = enable5, f = enable6, g = enable7, h = enable8);

    And(a = enable1, b = load, out = act1);
    And(a = enable2, b = load, out = act2);
    And(a = enable3, b = load, out = act3);
    And(a = enable4, b = load, out = act4);
    And(a = enable5, b = load, out = act5);
    And(a = enable6, b = load, out = act6);
    And(a = enable7, b = load, out = act7);
    And(a = enable8, b = load, out = act8);

    Register(in = in, load = act1, out = out1);
    Register(in = in, load = act2, out = out2);
    Register(in = in, load = act3, out = out3);
    Register(in = in, load = act4, out = out4);
    Register(in = in, load = act5, out = out5);
    Register(in = in, load = act6, out = out6);
    Register(in = in, load = act7, out = out7);
    Register(in = in, load = act8, out = out8);

    Mux8Way16(a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8, sel = address, out = out);


}